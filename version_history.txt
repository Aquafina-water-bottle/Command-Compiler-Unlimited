How versioning works:
    s#_#_# refers to the semantic version, which comes with their strict rules
        -this will be used for internal reference since it provides better info for the programmer compared to the public version
    v#_#_# refers to the public version, which is mostly me intrementing the major / minor / patch whenever I feel necessary
        -eg. if this program makes backwards incompatable changes that affects 0.001% of the users,
         I'll update the major in the semantic version, but I'll update either the minor or patch in the public version

s2.0.0		v0.0.0
    Mostly reorganizing a huge chunk of the pascal interpreter
        -Got a logger working
        -Things are in modules now

s3.0.0		v0.0.1
	-Added procedure declarations to the interpreter's GLOBAL_SCOPE
	-Added a bit more documentation to the overall program
	-Moved version history to its own file
	-Changed the main module from s2_0_0 to CCU so I don't have to rename my module every time I update
	-Added an error module for safe keeping
	-Change compound_statement to compound_stmt, and AST to Node because I can

s4.0.0		v0.1.0
    Mid: (Unfinished)
        -Changing the format from pascal to CCU:
            -Changed the _text.txt file to reflect the new format
            -Removed PROGRAM, and allowed the file itself to be its own program
            -Removed BEGIN / END blocks and replaced it with tab spaces
            -Removed VAR (and a specific var declarations block)
            -Changed the order of typing from "name, name: type" to "type name, type name"
            -All keywords are now case sensitive, and must be lowercase

        General changes:
            -Added a list [int, int] as position inside the file to better track errors

    Post:
        -Generally working now

s4.0.1		v0.1.1
    -Fixed a bug with "scoreboard players test", now doesn't have a random execute command

s4.1.0      v0.1.2
    -Integrated pyexpander with the program

s5.0.0      v0.1.3
    -Changed tab spaces to 4 spaces

s5.1.1      v0.2.1
    -Honestly a lot of stuff changed during this time but I forgot to record it
    -The main thing that was changed is how the shortcuts are made, since literally the entirity of interpreter.py was redone
    -Now everything is much more strict and a bit more readable and usable since it used to be almost a 
        one to one port from the old java code, which is just absolutely disgusting

    -Added the function shortcut where you can just type "function name" -> "function ego:EVENT_NAME/name"

s6.0.0      v0.3.0
    -Removed the Common, Post and Mid folders

s7.0.0      v0.4.0
    config_data.py:
        - Changed all logging errors to syntax error
        - Renamed config options to match up with the wiki https://minecraft.gamepedia.com/Commands#Target_selector_arguments
        - config.ini now supports comments, trailing whitespace and empty lines

    constants.py:
        - Removed completely and replaced with token_types.py

    token_types.py: (created)
        - Changed string constants to multiple Enum values to better organize the constants
        - Added a TokenRepr class to change the tuple representing both the type and value to the representation and the value
            - Similarly to the TokenPosition class, this is for clarity compared to the tuple of 2 strs

    lexical_token.py:
        - Removed a bunch of staticmethods that aren't being used anymore by the token

    token_position.py: (created)
        - Created a TokenPosition class to prevent confusion between the
            line number and the column number of the previous representation,
            which was a tuple of two ints
        - Created a TokenPositionRecorder class as a mutable version of the TokenPosition class
            used in during the tokenizing process

    parser.py:
        - Added a !folder statement and a !prefix statement
        - Changed a few methods to better match up to the grammar definition

    TODO:
        - Change from camel case to snake case
        - Clean up error logging
        - Rename certain variables based on selectors to match the wiki https://minecraft.gamepedia.com/Commands#Target_selector_arguments

        - Fix a glitch involving whitespace on empty lines
        - Fix a glitch involving no empty line at the end of the file
            - Redo how newlines are converted to tab space tokens