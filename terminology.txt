mcfunction name: The base name of the full path of the mcfunction without the extension
    eg. give_disguise

mcfunction (minecraft) path: the path to the mcfunction specified by the minecraft "function" command 
    eg. ego:block_hunt/a_small_village/give_disguise

mcfunction full path: the path to the actual mcfunction file specified by the given os 
    eg. C:/Users/Austin/AppData/Roaming/.minecraft/temp/data/functions/ego/block_hunt/a_small_village/give_disguise.mcfunction


token: The full token containing the token type, value and position (lexical_token.Token object)
    eg. Token[TokenPosition[row=1, column=3, char_pos=2]: type=<SelectorSimpleToken.OPEN_BRACKET: '['>, value='[']

token type: The general group of simple tokens and typed tokens, one of which is carried by a token object
    eg. SimpleToken.COLON, TypedToken.INT

simple tokens: All tokens with a predefined value
    eg. SimpleToken.COLON, StatementSimpleToken.STATEMENT_SPECIFIER

typed tokens: All tokens that carry a specific type and value
    eg. TypedToken.INT, SelectorTypedToken.TARGET_SELECTOR_VARIABLE

token class: The actual enum class that holds all tokens
    eg. TypedToken, SimpleToken, StatementSimpleToken

token values: All values held by each individual simple and typed token
    eg. ":" for SimpleToken.COLON


targets: Both target selectors and full (fake or real) names
    eg. @a[gSA=1,RRpl=3], french_man

(target) selectors: All formats with a selector variable and optional selector arguments to select a target
    eg. @a[type=armor_stand,RREntity,RRst=1]

(target) selector variables: The minecraft selector beginning with "@" and a target selector variable specifier
    eg. @r, @a, @p

(target) selector variable specifier: The letter that specifies what the selector variable does
    eg. r, a, p

(target) selector arguments: All arguments provided inside the square brackets of a selector variable
    eg. limit, dx, dy, dz, tag

(target) selector argument values: All values provided on the RHS of the selector argument
    eg. 5, 2..3, (12..), survival


local coordinates: All coordinates specified with ^
    eg. ^25, ^75.3, ^-23.4

relative coordinates: All coordinates specified with ~
    eg. ~25, ~75.3, ~-23.4

absolute coordinates: All coordinates specified just as a numeric value
    eg. 25, 75.3, -23.4
    
world coordinates: Both absolute and relative coordinates
    eg. 785, ~-27.1, 33.4


commands: Any full command in either Fena or minecraft depending on the context

fena commands: Any full command in Fena
    eg. @a[gSA=1,m=!3] if(coal_block ~ 19 ~) @s gTEMP = 1

minecraft commands: Any full command in minecraft
    eg. (1.12): execute @a[score_gSA_min=1,score_gSA=1,m=!3] ~ ~ ~ detect ~ 19 ~ coal_block * scoreboard players set @s gTEMP 1
    eg. (1.13): execute as @a[scores={gSA=1},gamemode=!spectator] if block ~ 19 ~ coal_block run scoreboard players set @s gTEMP 1

command name: The first part of any command
    eg. scoreboard, execute, kill, effect

sub commands: Any keyword found past the first command name
    eg. players, add, run, if

command parameters: Any custom input for any part past the first command name that is not a keyword (sub command)
    eg. 7, @a, _custom_tag

execute sub commands: Any execute command shortcut formatted as: execute sub command keyword, "(", execute sub command arguments, ")"
    eg. if(stone_bricks ~ ~ ~), ast(@e[type=armor_stand,_stand])

execute sub command arguments:
    eg. stone_bricks ~ ~ ~, @e[type=armor_stand,_stand]

execute sub command keyword: Any keyword shortcut inside a leading execute command
    eg. if, ast


entity_path: Either a selector or vec3 (as a tuple of 3 coordinates)
???: The group of bossbars, objectives, and teams

LHS: Left hand side
RHS: Right hand side
